---
- hosts: nm1
  become: true
  become_method: sudo
  # gather_facts: no
  vars:
    rsyslog_host: "192.168.1.125"
    rsyslog_port: "10514"
    nrpe_allowed_hosts: "192.168.1.0/24,172.17.0.0/16,127.0.0.1,::1"

  tasks:
  - include: playbooks/preflight_check.yml # fail if missing secrets

  - include: playbooks/initial.yml # etckeeper, fail2ban, ansible bits

  - include: playbooks/pkgs_fedora.yml
    when: ansible_os_family == "RedHat"
  - include: playbooks/pkgs_debian.yml
    when: ansible_os_family == "Debian"

  - include: playbooks/pip.yml

  - include: playbooks/firewall.yml
  - include: playbooks/logging.yml

  - include: playbooks/hw_drew-serv.yml # hardware specifics
    when: ansible_host == "drew-serv"
  - include: playbooks/hw_rpi.yml # hardware specifics
    when: "'debian-arm' in group_names"
  - include: playbooks/samba.yml # samba
    when: ansible_host == "drew-serv"
  - include: playbooks/httpd.yml # reverse https proxy for nagios/ns/kibana
    when: ansible_host == "drew-serv"
  - include: playbooks/postfix.yml # postfix server
    when: ansible_host == "drew-serv"
  - include: playbooks/postfix_relay.yml # postfix config for relay
    when: (ansible_host != "drew-serv")

  - include: playbooks/ntop.yml # ntop network monitoring
    when: ansible_host == "drew-piv3"

  - include: playbooks/nut_ups.yml # NUT UPS config
    when: ansible_host == "drew-piv3"

  - include: playbooks/rpi-cluster.yml
    when: "'rpi-cluster' in group_names"

  - include: playbooks/docker.yml # config for raspberry pi kubernetes cluster
  - include: playbooks/sshd_config.yml
  - include: playbooks/nrpe.yml
  - include: playbooks/cron.yml

  # docker containers; if this fails rclone is not initialized! `cd /root; drive init`
  - name: docker; get drew-serv-bkup-latest.tar.xz backup
    shell: |
      rclone copyto googledrive:/Backup/Web/$(rclone ls googledrive:/Backup/Web 2>&1 | awk -F" " '{ print $2 }' | grep -E '^drew-serv.*.tar.xz$' | sort | tail -n 1) /srv/drew-serv-bkup-latest.tar.xz
    args:
      creates: /srv/drew-serv-bkup-latest.tar.xz
    when: ansible_host == "drew-serv"
    notify:
    - docker; extract drew-serv-bkup-latest.tar.xz
    - docker; create container nagios4
    - docker; create container nightscout
    - docker; create container bind
    - docker; create container nexus
    # - docker; create container gitlab

## HANDLERS ##
  handlers:
  - include: playbooks/handlers.yml # start / restart systemd stuff, other things

  ## Docker Handlers
  - name: docker; extract drew-serv-bkup-latest.tar.xz
    unarchive:
      src: /srv/drew-serv-bkup-latest.tar.xz
      dest: /srv
      remote_src: yes
      # system_u:object_r:container_file_t
      setype: container_file_t
      serole: object_r
      seuser: system_u
    when: ansible_host == "drew-serv"

  - name: docker; create container nagios4
    docker_container:
      name: nagios4
      image: jasonrivers/nagios:4.4.4 # 4.4.2, 4.3.4, 4.4.1
      state: started
      restart_policy: unless-stopped
      hostname: nagios.invadelabs.com
      log_driver: json-file
      log_options:
        max-size: "10m"
      volumes:
        - /srv/nagios4/etc:/opt/nagios/etc
        - /srv/nagios4/var:/opt/nagios/var
        - /srv/nagios4/Custom-Nagios-Plugins:/opt/Custom-Nagios-Plugins
        - /srv/nagios4/nagiosgraph/var:/opt/nagiosgraph/var
        - /srv/nagios4/nagiosgraph/etc:/opt/nagiosgraph/etc
        - /srv/nagios4/main.cf:/etc/postfix/main.cf
        - /srv/nagios4/nagios.conf:/etc/apache2/sites-available/nagios.conf
      env: {
        "MAIL_RELAY_HOST": "192.168.1.125",
        "NAGIOS_FQDN": "nagios.invadelabs.com",
        "NAGIOS_TIMEZONE": "America/Denver"
        }
      ports:
        - "0.0.0.0:8080:80/tcp"
    when: ansible_host == "drew-serv"

  - name: docker; create container bind
    docker_container:
      name: bind
      image: sameersbn/bind:9.10.3-20180127
      state: started
      restart_policy: unless-stopped # XXX orig issue cannot bind to interface on startup, so start on cron @reboot
      hostname: ns.invadelabs.com
      log_driver: json-file
      log_options:
        max-size: "10m"
      volumes:
        - /srv/bind:/data
      ports:
        - "192.168.1.125:53:53/tcp"
        - "192.168.1.125:53:53/udp"
        - "0.0.0.0:10000:10000/tcp"
    when: ansible_host == "drew-serv"

  - name: docker; create container nightscout
    docker_container:
      name: nightscout
      image: nightscout/cgm-remote-monitor-travis:13.0.1
      state: started
      restart_policy: unless-stopped
      hostname: nightscout.invadelabs.com
      log_driver: json-file
      log_options:
        max-size: "10m"
      ports:
        - "0.0.0.0:1337:1337/tcp"
      env_file: /root/my.env
    when: ansible_host == "drew-serv"

  - name: docker; create container nexus
    docker_container:
      name: nexus
      image: sonatype/nexus3:3.23.0
      state: started
      restart_policy: unless-stopped
      hostname: nightscout.invadelabs.com
      log_driver: json-file
      log_options:
        max-size: "10m"
      volumes:
        - /mnt/share/nexus-data:/nexus-data
      ports:
        - "0.0.0.0:8081:8081/tcp"
    when: ansible_host == "drew-serv"

#    # https://docs.gitlab.com/runner/install/docker.html
#  - name: docker; create container gitlab
#    docker_container:
#      name: gitlab
#      image: gitlab/gitlab-ce:latest # 10.8.2 / 10.8.2-ce.0
#      state: stopped # XXX
#      restart_policy: unless-stopped
#      hostname: gitlab.invadelabs.com
#      log_driver: json-file
#      log_options:
#        max-size: "10m"
#      volumes:
#        - /srv/gitlab/config:/etc/gitlab
#        - /srv/gitlab/logs:/var/log/gitlab
#        - /srv/gitlab/data:/var/opt/gitlab
#        - /etc/letsencrypt:/etc/letsencrypt:ro
#      ports:
#        - "0.0.0.0:9443:443/tcp"
#        - "0.0.0.0:9980:80/tcp"
#        - "0.0.0.0:9922:22/tcp"
#    when: ansible_host == "drew-serv"
