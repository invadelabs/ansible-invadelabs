---
- name: apache2; download mod_pagespeed
  get_url:
    url: https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-stable_current_amd64.deb
    dest: /root/installers/mod-pagespeed-stable_current_amd64.deb
    force: no

- name: apache2; install mod_pagespeed
  apt:
    deb: /root/installers/mod-pagespeed-stable_current_amd64.deb

# apahce2.conf
- name: apache2; use /dev/shm for mod_pagespeed
  lineinfile:
    dest: /etc/apache2/mods-available/pagespeed.conf
    regexp: "^    ModPagespeedFileCachePath"
    line: '    ModPagespeedFileCachePath "/dev/shm/mod_pagespeed/"'
    state: present
  notify: Restart apache2.service

# apahce2 mods
- name: apache2; a2dismod
  apache2_module:
    state: absent
    name: "{{item}}"
  with_items:
    - mpm_prefork
    - php7.2
  notify: Restart apache2.service

- name: apache2; a2enmod
  apache2_module:
    state: present
    name: "{{item}}"
  with_items:
    - ssl
    - rewrite
    - headers
    - pagespeed
    - http2
    - mpm_event
    - proxy_fcgi
    - setenvif
  notify: Restart apache2.service

- name: apache2; a2enconf
  command: a2enconf {{item}}
  args:
    creates: /etc/apache2/conf-enabled/{{item}}.conf
  with_items:
    - php7.2-fpm
  notify: Restart apache2.service

# apahce2 env variables
# - name: apache2; Set gitdir_env
#   shell: grep {{item}} /root/apache_env | awk -F '"' '{print $2}'
#   with_items:
#     - gitdir_env
#     - deploy_env
#     - email_env
#     - slack_env
#   register: r
# - debug: var=r
#- name: apache2; load secrets for apache env vars
#  include_vars:
#    file: /root/apache_env
#  #no_log: true
- name: apache2; Set gitdir_env
  shell: grep gitdir_env /root/apache_env | awk -F '"' '{print $2}'
  register: gitdir_env
  no_log: true

- name: apache2; Set deploy_env
  shell: grep deploy_env /root/apache_env | awk -F '"' '{print $2}'
  register: deploy_env
  no_log: true

- name: apache2; Set email_env
  shell: grep email_env /root/apache_env | awk -F '"' '{print $2}'
  register: email_env
  no_log: true

- name: apache2; Set slack_env
  shell: grep slack_env /root/apache_env | awk -F '"' '{print $2}'
  register: slack_env
  no_log: true

# apahce2.conf
- name: apache2.conf updates
  lineinfile:
    dest: /etc/apache2/apache2.conf
    regexp: "^{{item.key}}"
    line: "{{item.key}} {{item.value}}"
    state: present
    validate: "/usr/sbin/apachectl -t -f %s"
  with_dict: {
    'ServerTokens': 'Prod',
    'ServerSignature': 'Off'
    }
  notify: Restart apache2.service

- name: apache2; add SSLStapling Cache to ssl.conf
  blockinfile:
    path: /etc/apache2/mods-available/ssl.conf
    marker: "        # {mark} ANSIBLE MANAGED BLOCK -->"
    insertbefore: "</IfModule>"
    content: "        SSLStaplingCache        shmcb:/var/run/ocsp(128000)"
  notify: Restart apache2.service

# blank /var/www/html/index.html
- name: apache2; /var/www/html/index.html
  copy:
    dest: /var/www/html/index.html
    content: ""
  notify: Restart apache2.service

# disable default site otherwise breaks some 302 http->https
# XXX https://github.com/ansible/ansible-modules-extras/pull/1240 use this module when finished
- name: apache2; a2dissite 000-default
  file:
    path: /etc/apache2/sites-enables/000-default.conf
    state: absent
  notify: Restart apache2.service

# apahce2 vhosts
- name: apache2; add site templates
  template:
    src: templates/etc/apache2/sites-available/{{item}}.conf.j2
    dest: /etc/apache2/sites-available/{{item}}.conf
  with_items:
    - drew.invadelabs.com
    - invadelabs.com
    - www.invadelabs.com
  notify: Restart apache2.service

# XXX https://github.com/ansible/ansible-modules-extras/pull/1240 use this module when finished
- name: apache2; a2ensite templates
  command: a2ensite {{item}}
  args:
    creates: /etc/apache2/sites-enabled/{{item}}.conf
  with_items:
    - drew.invadelabs.com
    - invadelabs.com
    - www.invadelabs.com
  notify: Restart apache2.service
