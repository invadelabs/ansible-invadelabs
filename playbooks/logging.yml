---
- name: logging; download filebeat
  get_url:
    url: https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.2.4-amd64.deb
    dest: /root/installers/filebeat-6.2.4-amd64.deb
    force: no
  when: ansible_fqdn == "invadelabs.com"

- name: logging; install filebeat
  apt:
    deb: /root/installers/filebeat-6.2.4-amd64.deb
  when: ansible_fqdn == "invadelabs.com"
  notify: Restart filebeat.service

- name: logging; add /etc/filebeat/filebeat.yml
  template:
    src: templates/etc/filebeat/filebeat.yml.j2
    dest: /etc/filebeat/filebeat.yml
  when: ansible_fqdn == "invadelabs.com"
  notify: Restart filebeat.service

- name: logging; /etc/systemd/journald.conf
  lineinfile:
    dest: /etc/systemd/journald.conf
    regexp: "^{{journald_item.key}}"
    line: "{{journald_item.key}}={{journald_item.value}}"
    state: present
  with_dict: {
    'ForwardToSyslog': 'yes'
    }
  loop_control:
    loop_var: journald_item
  notify: Restart systemd-journald.service

- name: logging; add /etc/rsyslog.d/logstash.conf
  template:
    src: "templates/etc/rsyslog.d/logstash.conf.j2"
    dest: "/etc/rsyslog.d/logstash.conf"
  notify: Restart rsyslog.service

- name: logging; add /etc/sysctl.d/vm.max_map_count.conf drew-serv # for logstash container
  template:
    src: "templates/etc/sysctl.d/vm.max_map_count.conf.j2"
    dest: "/etc/sysctl.d/vm.max_map_count.conf"
  when: ansible_fqdn == "drew-serv.invadelabs.com"
  notify: Restart rsyslog.service

- name: logging; add /etc/rsyslog.d entries # XXX get this manageable
  template:
    src: "templates/etc/rsyslog.d/{{rsyslog_item}}.j2"
    dest: "/etc/rsyslog.d/{{rsyslog_item}}"
  with_items:
    - ignore-audit.conf
    - ignore-nagios.conf
    - ignore-systemd.conf
  loop_control:
    loop_var: rsyslog_item
  notify: Restart rsyslog.service
  when: ansible_fqdn == "drew-serv.invadelabs.com"

- name: logging; remove logwatch daily
  file:
    path: '{{logwatch_item}}'
    state: absent
  with_items:
    - /etc/cron.daily/00logwatch
    - /etc/cron.daily/0logwatch
  loop_control:
    loop_var: logwatch_item

- name: logging; logwatch.conf
  lineinfile:
    path: /etc/logwatch/conf/logwatch.conf
    state: present
    create: yes
    regexp: '^{{logwatchconf_item.key}}'
    line: '{{logwatchconf_item.key}} = {{logwatchconf_item.value}}'
  with_dict: {
    "Range": "between -7 days and -1 days",
    "Archives": "yes"
    }
  loop_control:
    loop_var: logwatchconf_item
