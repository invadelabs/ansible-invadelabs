---
- name: pkgs_debian; mkdir /root/installers
  file:
    path: /root/installers
    state: directory

- name: pkgs_debian; debconf; postfix; option type 'Internet with smarthost'
  debconf: name=postfix question="postfix/main_mailer_type" value="'Internet with smarthost'" vtype="string"

- name: pkgs_debian; debconf; postfix; option type 'System mail name'
  debconf: name=postifx question="postfix/mailname" value="invadelabs.com" vtype="string"

- name: pkgs_debian; install packages
  apt: name={{apt_base_item}} state=present # update_cache=yes
  with_items:
  - mailutils
  - postfix
  - libsasl2-modules # needed for postfix sendgrid

  - docker.io

  #- libnagios-plugin-perl # XXX needed for nagios-plugins-contrib (deps broken?) / broken on invadelabs.com
  - monitoring-plugins-standard
  - nagios-nrpe-server
  - monitoring-plugins-basic
  - nagios-plugins-contrib # XXX installs a lo tof deps for 1 scripts, work around?
  - debian-keyring # needed for nrpe debian package
  - debian-archive-keyring # needed for nrpe debian package

  #- ansible # will be installed via pip for arm devices
  - software-properties-common # for ansible
  - python-paramiko # for ansible-pull
  - python-jinja2 # for ansible-pull

  - vim
  - logwatch
  - python-pip # needed for docker-py
  - libdate-manip-perl # needed for logwatch date ranges
  - curl # for invadelabs/cron-invadelabs
  - highlight # for invadelabs/cron-invadelabs
  - lynis # for invadelabs/cron-invadelabs/check_lynis.sh
  - bc # for invadelabs/cron-invadelabs/wiki_to_md.sh
  - pandoc # for invadelabs/cron-invadelabs/wiki_to_md.sh
  - pxz # for invadelabs/cron-invadelabs/gdrive.sh
  - gawk # for lynis and ansi2html
  - dbus # for lynis and ansi2html
  loop_control:
    loop_var: apt_base_item
  notify:
  - Start postfix.service

  # pine 64 requirements
- name: pkgs_debian; pine64 extras needed for pip
  apt: name={{apt_pine64_item}} state=present
  with_items:
    - python-dev # needed to build ansible via pip on pine64 u16.04
    - libffi-dev # needed to build ansible via pip on pine64 u16.04
  loop_control:
    loop_var: apt_pine64_item
  when: ansible_fqdn == "drew-pine64.invadelabs.com"

- name: pkgs_debian; install ansible via pip on arm
  pip:
    name: ansible
  when: ( ansible_fqdn == "drew-pine64.invadelabs.com" ) or ( ansible_fqdn == "drew-piv3.invadelabs.com" )

  # invadelabs.com requirements
- name: pkgs_debian; invadelabs.com
  apt: name={{invadelabs_item}} state=present
  with_items:
    - snapd # for invadelabs/cron-invadelabs/gdrive.sh
    - ansible

    - apache2
    - php7.2-fpm
    - libapache2-mod-php
    - php-sqlite3
    - php-mbstring
    - php-xml
    - php-curl
    - php-apcu

    - php-mbstring # for drewwiki

    - certbot
    - python-certbot-apache
  loop_control:
    loop_var: invadelabs_item
  notify:
  - Start apache2.service
  - Start php7.2-fpm.service
  when: ansible_fqdn == "invadelabs.com"

- name: pkgs_debian; etckeeper post-install # XXX use file module state=touch here
  shell: |
    touch /var/log/firstpkg.run
    etckeeper post-install
  args:
    creates: /var/log/firstpkg.run

- name: pkgs_debian; update-alternatives editor to vim-basic
  alternatives:
    name: editor
    path: /usr/bin/vim.basic
  when: ansible_os_family == 'Debian'
