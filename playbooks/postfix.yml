---
- name: postfix; /etc/postfix/main.cf
  lineinfile:
    dest: /etc/postfix/main.cf
    regexp: "^{{postfix_item.key}}"
    line: "{{postfix_item.key}} = {{postfix_item.value}}"
    state: present
  with_dict: {
    "smtpd_relay_restrictions": "permit_mynetworks permit_sasl_authenticated defer_unauth_destination",
    "myhostname": "{{ansible_fqdn}}",
    "mynetworks ": "{{postfix_mynetworks}}",
    "alias_maps": "hash:/etc/aliases",
    "alias_database": "hash:/etc/aliases",
    "mydestination": "$myhostname, localhost",
    "relayhost": "[smtp.sendgrid.net]:2525",
    "mailbox_size_limit": "0",
    "recipient_delimiter": "+",
    "inet_interfaces": "all",
    "inet_protocols": "all",
    "smtp_sasl_auth_enable": "yes",
    "smtp_sasl_password_maps": "hash:/etc/postfix/sasl_passwd",
    "header_size_limit": "4096000",
    "smtp_tls_security_level": "encrypt",
    "smtp_sasl_security_options": "noanonymous",
    "smtp_sasl_tls_security_options": "noanonymous",
    "smtpd_tls_cert_file": "/etc/letsencrypt/live/invadelabs.com-0001/fullchain.pem",
    "smtpd_tls_key_file": "/etc/letsencrypt/live/invadelabs.com-0001/privkey.pem"
    }
  loop_control:
    loop_var: postfix_item
  notify: Restart postfix.service

- name: postfix; check if /etc/postfix/sasl_passwd.db exists
  stat:
    path: /etc/postfix/sasl_passwd.db
  register: stat_sasl_passwd
  no_log: true

- name: postfix; set sasl_passwd
  shell: cat /root/postfix_passwd
  register: sasl_passwd
  when: stat_sasl_passwd.stat.exists == False
  no_log: true

- name: postfix; create /etc/postfix/sasl_passwd
  copy:
    dest: /etc/postfix/sasl_passwd
    content: "{{ sasl_passwd.stdout }}"
    mode: 0400
  when: stat_sasl_passwd.stat.exists == False
  no_log: true

- name: postfix; postmap /etc/postfix/sasl_passwd
  shell: |
    postmap /etc/postfix/sasl_passwd
    rm /etc/postfix/sasl_passwd
  args:
    chdir: /etc/postfix
    creates: /etc/postfix/sasl_passwd.db
  notify: Restart postfix.service
  when: stat_sasl_passwd.stat.exists == False
