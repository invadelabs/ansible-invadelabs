---
# - name: initial; get Name cloud attribute from meta-data
#   shell: curl -s --connect-timeout .1 http://169.254.169.254/0.1/meta-data/attributes/Name || true
#   register: cloud_Name

# - name: initial; set hostname invadelabs.com
#   command: hostname invadelabs.com
#   when: 'cloud_Name.stdout == "invadelabs.com"'

- name: initial; ensure "drew" is in sudoers
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^drew ALL='
    line: 'drew ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'

# XXX find a better way for this
- name: initial; ensure "nrpe" is in sudoers with smartctl
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^nrpe ALL='
    line: 'nrpe ALL = NOPASSWD: /usr/sbin/smartctl'
    validate: '/usr/sbin/visudo -cf %s'

- name: initial; ensure "nrpe" is in sudoers with check_docker
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^nrpe ALL='
    line: 'nrpe ALL = NOPASSWD: /usr/local/bin/check_docker'
    validate: '/usr/sbin/visudo -cf %s'

- name: initial; mkdir /root/installers
  file:
    path: /root/installers
    state: directory

- name: initial; add /etc/motd
  template:
    src: templates/etc/motd.j2
    dest: /etc/motd
    owner: root
    group: root
    mode: 0644

- name: initial; set timezone to America/Denver
  timezone:
    name: America/Denver

# XXX will be handled by gce firewall list
- name: initial; disable sshguard invadelabs.com
  service: name=sshguard state=stopped enabled=no
  when: ansible_fqdn == "invadelabs.com"

- name: initial; add rpi /etc/apt/sources.list apt proxy
  template:
    src: templates/etc/apt/sources.list.rpi.j2
    dest: /etc/apt/sources.list
    owner: root
    group: root
    mode: 0644
  when: "'debian-arm' in group_names"

- name: initial; add rpi /etc/apt/sources.list.d/raspi.list apt proxy
  template:
    src: templates/etc/apt/sources.list.d/raspi.list.rpi.j2
    dest: /etc/apt/sources.list.d/raspi.list
    owner: root
    group: root
    mode: 0644
  when: "'debian-arm' in group_names"

- name: initial; add lynis gpg key
  apt_key:
    keyserver: hkp://keyserver.ubuntu.com:80
    id: C80E383C3DE9F082E01391A0366C67DE91CA5D5F
  when: "'debian-arm' in group_names"

- name: initial; add /etc/apt/sources.list.d/lynis.list apt proxy
  template:
    src: templates/etc/apt/sources.list.d/lynis.list.rpi.j2
    dest: /etc/apt/sources.list.d/lynis.list
  when: "'debian-arm' in group_names"

- name: initial; add /etc/apt/apt.conf.d/10periodic
  template:
    src: templates/etc/apt/apt.conf.d/10periodic.j2
    dest: /etc/apt/apt.conf.d/10periodic
    owner: root
    group: root
    mode: 0644
  when: "'debian-arm' in group_names"

- name: initial; drew-piv3; apt; install fail2ban
  apt: name=fail2ban state=present
  when: ansible_hostname == "drew-piv3"

- name: initial; apt; install etckeeper and initial packages
  apt:
    pkg:
    - etckeeper
    - python3-apt # for ansible
    state: present
  when: ansible_os_family == "Debian"

- name: initial; fedora needs link /var/lib/snapd/snap to /snap
  file:
    src: /var/lib/snapd/snap
    dest: /snap
    owner: root
    group: root
    state: link
  when: ansible_host == "drew-serv"

- name: initial; dnf; install etckeeper # XXX fix python2-dnf requirement for fedora 30
  dnf: name=etckeeper state=present
  when: ansible_distribution == "Fedora"

- name: initial; gitconfig
  git_config:
    name: "{{git_item.key}}"
    scope: global
    value: "{{git_item.value}}"
  with_dict: {
    "user.email": "drew@invadelabs.com",
    "user.name": "Drew Holt"
    }
  loop_control:
    loop_var: git_item

- name: initial; set SELinux to permissive
  selinux:
    policy: targeted
    state: permissive
  when: ansible_distribution == 'Fedora'

- name: initial; add .forward
  copy:
    dest: "{{forward_item.value}}/.forward"
    owner: "{{forward_item.key}}"
    group: "{{forward_item.key}}"
    content: "drewderivative@gmail.com"
  with_dict: {
    "drew": "/home/drew",
    "root": "/root"
    }
  loop_control:
    loop_var: forward_item

- name: initial; git clone --depth 1 invadelabs.com/cron-invadelabs
  git:
    repo: https://github.com/invadelabs/cron-invadelabs.git
    dest: /root/scripts
    depth: 1

- name: initial; nrpe; dl check_memory.pl
  get_url:
    url: https://gist.githubusercontent.com/drew-holt/4da247a2874b7a0470bd3d55d5191312/raw/d24673b607dfee98f8a859acca21ef5dde26aa3d/check_memory.pl
    dest: /usr/local/bin/check_memory.pl
    mode: 0755
    owner: root
    group: root
    force: no
    checksum: "sha256:2269ac81e514a3c75dec030c5dc8d3a058729755c6cbca250e69f717a1ac7978"
  when: ansible_host == "drew-serv"

## ansi2html.sh
- name: initial; ansi2html.sh
  get_url:
    url: https://raw.githubusercontent.com/pixelb/scripts/dce7689196f6fd2efa87fd2d64e6e491c927b349/scripts/ansi2html.sh
    dest: /usr/local/bin/ansi2html.sh
    mode: 0755
    owner: root
    group: root
    force: no
    checksum: "sha256:6bff734f83234046cb94de6bff001f0038104462c5336769f09b6f0df9cc6d2e"

## slacktee.sh
- name: initial; slacktee.sh
  get_url:
    url: https://raw.githubusercontent.com/coursehero/slacktee/v1.4.2/slacktee.sh
    dest: /usr/local/bin/slacktee.sh
    mode: 0755
    owner: root
    group: root
    force: no
    checksum: "sha256:f17b39737c5fe1926c354890ac6e9e5cf11afd09d8351e9b498fe9a608cf2e95"

# check_temp.sh
- name: initial; nrpe; download check_temp.sh
  copy:
    src: /root/scripts/check_temp.sh
    dest: /usr/local/bin/check_temp.sh
    mode: 0755
    owner: root
    group: root
    remote_src: yes

# check_temp.sh
- name: initial; nrpe; download check_mongo_mybg.py
  copy:
    src: /root/scripts/check_mongo_mybg.py
    dest: /usr/local/bin/check_mongo_mybg.py
    mode: 0755
    owner: root
    group: root
    remote_src: yes

## check_es_system.sh
- name: initial; check_es_system.sh
  get_url:
    url: https://raw.githubusercontent.com/Napsty/check_es_system/1.8/check_es_system.sh
    dest: /usr/local/bin/check_es_system.sh
    mode: 0755
    owner: root
    group: root
    force: no
    checksum: "sha256:7cc84d9136bf31ae021bc48997167375ddbbe701c2886f74fa4d7b00abaa0242"
  when: ansible_host == "drew-serv"

## check_smart.pl
- name: initial; check_smart.pl
  get_url:
    url: https://github.com/Napsty/check_smart/raw/6.7.0/check_smart.pl
    dest: /usr/local/bin/check_smart.pl
    mode: 0755
    owner: root
    group: root
    force: no
    checksum: "sha256:d3c17702ffcde121cd990bb3e4262a7574b0034aea716e203b357abfaae94210"
  when: ansible_host == "drew-serv"

## check_bat # XXX set checksum when done
- name: initial; nrpe; dl check_bat
  get_url:
    url: https://github.com/drew-holt/nagios-plugins/raw/master/check_bat
    dest: /usr/local/bin/check_bat
    mode: 0755
    owner: root
    group: root
    force: no
    checksum: "sha256:50bafe42bfbf9cde2c34daaf56b64f940f2502ceeb9ae5ea71dd5b936837e345"
  when: ansible_host == "drew-serv"

## check_fail2ban.sh http://nagios.fm4dd.com/plugins/manual/check_fail2ban.htm
- name: initial; nrpe; dl check_fail2ban.sh
  get_url:
    url: http://nagios.fm4dd.com/plugins/source/check_fail2ban.sh
    dest: /usr/local/bin/check_fail2ban.sh
    mode: 0755
    owner: root
    group: root
    force: no
    checksum: "sha256:d51f1fbdc7ffb70a3f89dce99a54eed11c1f9b7d1605557681b80bfb407ad25d"
  when: ansible_host == "drew-piv3"

- name: initial; nrpe; /var/run/fail2ban/fail2ban.sock perms
  file:
    dest: /var/run/fail2ban/fail2ban.sock
    mode: 0660
    owner: root
    group: nagios
  when: ansible_host == "drew-piv3"
