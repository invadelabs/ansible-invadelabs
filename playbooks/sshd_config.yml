---
- name: sshd_config; sshd_config params
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^{{sshd_item.key}}"
    line: "{{sshd_item.key}} {{sshd_item.value}}"
    state: present
    validate: '/usr/sbin/sshd -t -f %s'
  with_dict: {
    "KexAlgorithms": "curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256",
    "Ciphers": "chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr",
    "MACs": "hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com",
    "PermitRootLogin": "no",
    "AllowUsers": "drew drewderivative" } # XXX
  loop_control:
    loop_var: sshd_item
  notify:
    - Restart sshd.service # XXX better way to do this
    - Restart ssh.service

- name: sshd_config; DebianBanner no
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^DebianBanner"
    line: "DebianBanner no"
    state: present
    validate: '/usr/sbin/sshd -t -f %s'
  notify:
    - Restart sshd.service # XXX better way to do this
    - Restart ssh.service
  when: ansible_os_family == "Debian"

- name: sshd_config; Banner no
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^Banner"
    line: "Banner no"
    state: present
    validate: '/usr/sbin/sshd -t -f %s'
  notify:
    - Restart sshd.service # XXX better way to do this
    - Restart ssh.service
  when: ansible_fqdn == "drew-piv3.invadelabs.com"
