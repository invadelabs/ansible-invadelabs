---
- hosts: invadelabs.com
  become: true
  become_method: sudo
  # gather_facts: no
  vars:
    rsyslog_host: localhost
    rsyslog_port: 11514
    nrpe_allowed_hosts: "nm.invadelabs.com,127.0.0.1,::1"

  tasks:
    - name: fail if hostname not set to invadelabs.com
      fail:
        msg: "Host name is not set to invadelabs.com! Run; hostnamectl set-hostname invadelabs.com"
      when: ansible_fqdn != "invadelabs.com"

    - import_tasks: playbooks/preflight_check.yml # fail if missing secrets
    - import_tasks: playbooks/initial.yml # etckeeper, fail2ban, ansible bits
    - import_tasks: playbooks/pkgs_debian.yml # all apt / dpkg software bits needed
    - import_tasks: playbooks/pip.yml # anything pip here
    - import_tasks: playbooks/sshd_config.yml
    - import_tasks: playbooks/lynis.yml
    - import_tasks: playbooks/logging.yml # rsyslog / filebeat
    - import_tasks: playbooks/postfix.yml # sendgrid relay config
    - import_tasks: playbooks/drive.yml # initalize rclone, configures letsencrypt
    - import_tasks: playbooks/cron.yml
    - import_tasks: playbooks/nrpe.yml # nagios nrpe monitoring
    - import_tasks: playbooks/nginx-invadelabs.com.yml # reverse proxy config

    - name: pkgs; snap install certbot-dns-cloudflare
      snap:
        name:
          - certbot-dns-cloudflare

    - name: docker; create container nginx
      docker_container:
        name: nginx
        image: "nginx:1.27.0-alpine"
        state: started
        restart_policy: unless-stopped
        hostname: nginx.invadelabs.com
        log_driver: json-file
        log_options:
          max-size: "10m"
        volumes:
          - "/etc/letsencrypt:/etc/letsencrypt:ro"
          - "/srv/nginx/conf.d:/etc/nginx/conf.d:ro"
          - "/srv/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
          - "/var/log/nginx:/var/log/nginx:rw"
          - "/srv/nginx/ssl-inv-default.conf:/etc/nginx/ssl-inv-default.conf:ro"
        ports:
          - "80:80/tcp"
          - "443:443/tcp"

    - name: docker; create container nightscout
      docker_container:
        name: nightscout
        image: "nightscout/cgm-remote-monitor:15.0.1"
        state: started
        restart_policy: unless-stopped
        hostname: cgm.invadelabs.com
        # log_driver: none
        log_driver: json-file
        log_options:
          max-size: "1m"
        ports:
          - "1337:1337/tcp"
        env_file: /etc/default/cgm.env

    - name: docker; create container tconnectsync
      docker_container:
        name: tconnectsync
        image: "jwoglom/tconnectsync:2.1.4"
        state: present
        restart_policy: false
        # temp dns workaround..
        etc_hosts: {
          "cgm.invadelabs.com": "{{ ansible_default_ipv4.address }}"
        }
        log_driver: json-file
        log_options:
          max-size: "10m"
        env_file: /etc/default/tconnectsync.env

    - name: docker; create container drewwiki
      docker_container:
        name: drewwiki
        image: "mediawiki:1.41.1"
        state: started
        restart_policy: unless-stopped
        hostname: drew.invadelabs.com
        # log_driver: none
        log_driver: json-file
        log_options:
          max-size: "1m"
        volumes:
          - "/srv/drewwiki/LocalSettings.php:/var/www/html/LocalSettings.php"
          - "/srv/drewwiki/database:/var/www/data"
          - "/srv/drewwiki/images:/var/www/html/images"
          - "/srv/drewwiki/omgz_square.gif:/var/www/html/omgz_square.gif"
          - "/srv/drewwiki/favicon.ico:/var/www/html/favicon.ico"
          - "/srv/drewwiki/googleAnalytics:/var/www/html/extensions/googleAnalytics"
        ports:
          - "8085:80/tcp"

  handlers:
    - import_tasks: playbooks/handlers.yml
