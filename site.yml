---
- hosts: nm01
  become: true
  become_method: sudo
  # gather_facts: no
  vars:
    rsyslog_host: "192.168.1.125"
    rsyslog_port: "10514"

  tasks:
  - name: fail if hostname not set
    fail:
      msg: "Host name {{ansible_fqdn}} is not set. Run; hostnamectl set-hostname invadelabs.com"
    when: ( ansible_fqdn == "localhost" ) or ( ansible_fqdn == "raspberrypi" ) or ( ansible_fqdn == "pine64" )

  - name: stat required files in /root
    stat:
      path: "{{item}}"
    with_items:
      - /root/check_ddns.cred
      - /root/postfix_passwd
      - /root/slacktee.conf
    register: item
    failed_when: item.stat.exists == False
    when: ansible_fqdn == "drew-serv.invadelabs.com"

  - name: check if drive initalized
    shell: /var/lib/snapd/snap/bin/drive quota >/dev/null; touch /var/log/drive-init.touch;
    args:
      chdir: /root
      creates: /var/log/drive-init.touch
    register: drive_stat
    failed_when: drive_stat.rc != 0 # rc = proccess exit code
    when: ansible_fqdn == "drew-serv.invadelabs.com"

  - include: playbooks/initial.yml # etckeeper, fail2ban, ansible bits
  - include: playbooks/firewall.yml
  - include: playbooks/logging.yml

  - include: playbooks/pkgs_fedora.yml
    when: ansible_fqdn == "drew-serv.invadelabs.com"

  - include: playbooks/pkgs_debian.yml
    when: ansible_os_family == "Debian"

  - include: playbooks/hw_drew-serv.yml # hardware specifics
    when: ansible_fqdn == "drew-serv.invadelabs.com"
  - include: playbooks/drive.yml # Nagios NRPE config
    when: ansible_fqdn == "drew-serv.invadelabs.com"
  - include: playbooks/mount.yml
    when: ansible_fqdn == "drew-serv.invadelabs.com"
  - include: playbooks/samba.yml
    when: ansible_fqdn == "drew-serv.invadelabs.com"

  - include: playbooks/postfix.yml
    when: ansible_fqdn == "drew-serv.invadelabs.com"
  - include: playbooks/postfix_relay.yml
    when: (ansible_fqdn == "drew-pine64.invadelabs.com") or ( ansible_fqdn == "drew-piv3.invadelabs.com" )

  - include: playbooks/docker.yml
  - include: playbooks/sshd_config.yml
  - include: playbooks/nrpe.yml
  - include: playbooks/cron.yml

  # if this fails drive is not initialized! `cd /root; drive init`
  - name: docker; get drew-serv-bkup-latest.tar.xz backup
    shell: |
      P="/var/lib/snapd/snap/bin"
      $P/drive pull \
      -piped "$($P/drive ls Backup/Web | grep drew-serv | \
      grep -v sha256 | sort | tail -n 1 | cut -c 2-)" > \
      /srv/drew-serv-bkup-latest.tar.xz
      touch /srv/first-run
    args:
      chdir: /root
      creates: /srv/first-run
    when: ansible_fqdn == "drew-serv.invadelabs.com"
    notify:
    - Extract drew-serv-bkup-latest.tar.xz
    - docker; create container nagios4
    - docker; create container gitlab
    - docker; create container bind

  handlers:
  - name: Start docker.service
    service: name=docker state=started enabled=yes
  # base
  - name: Start chronyd.service
    service: name=chronyd state=started enabled=yes
  - name: Start mcelog.service
    service: name=mcelog state=started enabled=yes
  - name: Start smb.service
    service: name=smb state=started enabled=yes
  - name: Start nmb.service
    service: name=nmb state=started enabled=yes
  - name: Start httpd.service
    service: name=httpd state=started enabled=yes
  - name: Start postfix.service
    service: name=postfix state=started enabled=yes
  - name: Start rsyslog.service
    service: name=rsyslog state=started enabled=yes
  # nagios
  - name: Start nrpe.service
    service: name=nrpe state=started enabled=yes
  # kvm
  - name: Start libvirtd.service
    service: name=libvirtd state=started enabled=yes

  - name: Setup lm_sensors
    command: sensors-detect --auto # XXX not when modules have already been inserted

  - name: grub2-mkconfig -o /boot/grub2/grub.cfg
    command: grub2-mkconfig -o /boot/grub2/grub.cfg

  - name: Retart network.service
    service: name=network state=restarted
  - name: Restart postfix.service
    service: name=postfix state=restarted
  - name: Restart systemd-journald.service
    service: name=systemd-journald state=restarted
  - name: Restart smartd.service
    service: name=smartd state=restarted

  - name: Restart sshd.service
    service: name=sshd state=restarted
    when: ansible_os_family == "RedHat"
  - name: Restart ssh.service
    service: name=ssh state=restarted
    when: ansible_os_family == "Debian"

  - name: Restart nrpe.service
    service: name=nrpe state=restarted
    when: ansible_os_family == "RedHat"
  - name: Restart nagios-nrpe-server.service
    service: name=nagios-nrpe-server state=restarted
    when: ansible_os_family == "Debian"

  - name: Restart smb.service
    service: name=smb state=restarted
  - name: Restart rsyslog.service
    service: name=rsyslog state=restarted

  - name: docker; extract drew-serv-bkup-latest.tar.xz
    unarchive:
      src: /srv/drew-serv-bkup-latest.tar.xz
      dest: /srv
      remote_src: yes
      # system_u:object_r:container_file_t
      setype: container_file_t
      serole: object_r
      seuser: system_u
    when: ansible_fqdn == "drew-serv.invadelabs.com"

  - name: docker; create container nagios4
    docker_container:
      name: nagios4
      image: jasonrivers/nagios:latest # 4.3.4
      state: started
      restart_policy: unless-stopped
      hostname: nagios.invadelabs.com
      log_driver: json-file
      log_options:
        max-size: "10m"
      volumes:
        - /srv/nagios4/etc:/opt/nagios/etc
        - /srv/nagios4/var:/opt/nagios/var
        - /srv/nagios4/Custom-Nagios-Plugins:/opt/Custom-Nagios-Plugins
        - /srv/nagios4/nagiosgraph/var:/opt/nagiosgraph/var
        - /srv/nagios4/nagiosgraph/etc:/opt/nagiosgraph/etc
        - /srv/nagios4/main.cf:/etc/postfix/main.cf
        - /srv/nagios4/nagios.conf:/etc/apache2/sites-available/nagios.conf
      env: {
        "MAIL_RELAY_HOST": "192.168.1.125",
        "NAGIOS_FQDN": "nagios.invadelabs.com",
        "NAGIOS_TIMEZONE": "America/Denver"
        }
      ports:
        - "0.0.0.0:8080:80/tcp"
    when: ansible_fqdn == "drew-serv.invadelabs.com"

    # https://docs.gitlab.com/runner/install/docker.html
  - name: docker; create container gitlab
    docker_container:
      name: gitlab
      image: gitlab/gitlab-ce:latest # 10.8.2 / 10.8.2-ce.0
      state: started
      restart_policy: unless-stopped
      hostname: gitlab.invadelabs.com
      log_driver: json-file
      log_options:
        max-size: "10m"
      volumes:
        - /srv/gitlab/config:/etc/gitlab
        - /srv/gitlab/logs:/var/log/gitlab
        - /srv/gitlab/data:/var/opt/gitlab
      ports:
        - "0.0.0.0:9443:443/tcp"
        - "0.0.0.0:9980:80/tcp"
        - "0.0.0.0:9922:22/tcp"
    when: ansible_fqdn == "drew-serv.invadelabs.com"

  - name: docker; create container bind
    docker_container:
      name: bind
      image: sameersbn/bind:9.10.3-20180127
      state: started
      restart_policy: unless-stopped
      hostname: ns.invadelabs.com
      log_driver: json-file
      log_options:
        max-size: "10m"
      volumes:
        - /srv/bind:/data
      ports:
        - "192.168.1.125:53:53/tcp"
        - "192.168.1.125:53:53/udp"
        - "192.168.1.125:10000:10000/tcp"
    when: ansible_fqdn == "drew-serv.invadelabs.com"
